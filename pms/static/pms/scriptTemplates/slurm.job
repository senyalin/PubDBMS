#!/bin/bash
##ENVIRONMENT SETTINGS; CHANGE WITH CAUTION
#SBATCH --export=NONE        #Do not propagate environment
#SBATCH --get-user-env=L     #Replicate login environment
  
##NECESSARY JOB SPECIFICATIONS
#SBATCH -J JobExample1       #Set the job name to "JobExample1"
#SBATCH -t 01:30:00          #Set the wall clock limit to 1hr and 30mint
#SBATCH -n $cpus$                  #Request 2 tasks
#SBATCH --ntasks-per-node=1  #Request 2 task/core per node
#SBATCH --mem=$mems$          #Request 8192MB (8GB) per node
#SBATCH -o Example1Out.%j    #Send stdout/err to "Example1Out.[jobID]"
# both are necessary for GPU jobs
#SBATCH -p gpu               #Submit gpu queue
#SBATCH --gres=gpu:$gpus$         #Request 2 GPUs per node

ml intel/2017A
ml CUDA/8.0.44-unsupportedCC

param="$param$"

loc="/geosat/SDR_Stor/"

printLine='sed "2q;d" $param'
ThrLine=$(eval $printLine)


printLine='sed "3q;d" $param'
ThrLine=$(eval $printLine)
ThrLine=$(echo $ThrLine | tr -d '\015')

printLine='sed "4q;d" $param'
ForLine=$(eval $printLine)
ForLine=$(echo $ForLine | tr -d '\015')

printLine='sed "5q;d" $param'
FiveLine=$(eval $printLine)
FiveLine=$(echo $FiveLine | tr -d '\015')

printLine='sed "6q;d" $param'
SixLine=$(eval $printLine)
SixLine=$(echo $SixLine | tr -d '\015')

repl='dat'
result_string="${ForLine/tif/dat}"
echo "echoing string"
echo $result_string

mkdirFolder='mkdir -p "$loc"Output/"$SixLine"/'
eval $mkdirFolder

createFile='touch "$loc"Output/"$SixLine"/"$FiveLine"'
echo 'touch "$loc"Output/' + $SixLine + '/' + $FiveLine
eval $createFile

mpirun ./run "$param"
